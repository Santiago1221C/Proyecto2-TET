apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq-statefulset
  namespace: bookstore
  labels:
    app: rabbitmq
    component: message-broker
spec:
  serviceName: rabbitmq-service
  replicas: 2  # Mínimo 2 réplicas para alta disponibilidad
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
        component: message-broker
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.11-management-alpine
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        env:
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: bookstore-secrets
              key: RABBITMQ_ERLANG_COOKIE
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: bookstore-secrets
              key: RABBITMQ_USER
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: bookstore-secrets
              key: RABBITMQ_PASS
        - name: RABBITMQ_DEFAULT_VHOST
          value: "/"
        - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
          value: "-rabbit cluster_formation.peer_discovery_backend rabbit_peer_discovery_k8s"
        - name: K8S_SERVICE_NAME
          value: "rabbitmq-service"
        - name: K8S_HOSTNAME_SUFFIX
          value: ".rabbitmq-service.bookstore.svc.cluster.local"
        volumeMounts:
        - name: rabbitmq-storage
          mountPath: /var/lib/rabbitmq
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "rabbitmq-diagnostics -q ping"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "rabbitmq-diagnostics -q check_port_connectivity"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "rabbitmq-diagnostics -q ping"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
      # Configuración de anti-afinidad para distribuir réplicas en diferentes nodos
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - rabbitmq
              topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "gp2"  # AWS EBS
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: bookstore
  labels:
    app: rabbitmq
    component: message-broker
spec:
  type: ClusterIP
  ports:
  - port: 5672
    targetPort: 5672
    protocol: TCP
    name: amqp
  - port: 15672
    targetPort: 15672
    protocol: TCP
    name: management
  selector:
    app: rabbitmq
  # Configuración de sesión para balanceo de carga
  sessionAffinity: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: bookstore
  labels:
    app: rabbitmq
    component: message-broker
data:
  rabbitmq.conf: |
    # RabbitMQ configuration for production
    listeners.tcp.default = 5672
    management.tcp.port = 15672
    management.tcp.ip = 0.0.0.0
    
    # Memory and disk limits
    vm_memory_high_watermark.relative = 0.6
    disk_free_limit.relative = 1.0
    
    # Logging
    log.console = true
    log.console.level = info
    log.file = /var/log/rabbitmq/rabbitmq.log
    log.file.level = info
    log.file.rotation.date = $D0
    log.file.rotation.size = 0
    
    # Clustering
    cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.k8s.port = 443
    cluster_formation.k8s.address_type = hostname
    cluster_formation.k8s.hostname_suffix = .rabbitmq-service.bookstore.svc.cluster.local
    cluster_formation.k8s.service_name = rabbitmq-service
    cluster_formation.k8s.port = 5672
    cluster_formation.k8s.protocol = tcp
    cluster_formation.k8s.token_file = /var/run/secrets/kubernetes.io/serviceaccount/token
    cluster_formation.k8s.cert_file = /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    cluster_formation.k8s.namespace = bookstore
    cluster_formation.k8s.include_nodes = rabbitmq-0.rabbitmq-service.bookstore.svc.cluster.local,rabbitmq-1.rabbitmq-service.bookstore.svc.cluster.local
    
    # Queue master location
    queue_master_locator = min-masters
    
    # Heartbeat
    heartbeat = 60
    
    # TCP settings
    tcp_listen_options.backlog = 128
    tcp_listen_options.nodelay = true
    tcp_listen_options.keepalive = true
    tcp_listen_options.exit_on_close = false
    
    # Connection limits
    num_acceptors.tcp = 10
    handshake_timeout = 10000
    
    # Channel limits
    channel_max = 2047
    frame_max = 131072
    
    # Queue settings
    queue_index_embed_msgs_below = 4096
    msg_store_file_size_limit = 16777216
    queue_master_locator = min-masters
    
    # Management plugin
    management.load_definitions = /etc/rabbitmq/definitions.json
    management.rates_mode = basic
    management.sample_retention_policies.global = 60000, 5
    management.sample_retention_policies.basic = 60000, 5
    management.sample_retention_policies.detailed = 60000, 5

